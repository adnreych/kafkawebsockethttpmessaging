version: "2"
services:
  zookeeper:
    image: wurstmeister/zookeeper
    expose:
      - "2181"
  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    expose:
      - "9093"
    environment:
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://1.2.3.4:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:SASL_PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/kafka_server_jaas.conf"
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
    depends_on:
      - zookeeper
    volumes:
      - ./:/etc/kafka
  mc1:
    build: .
    command: java -jar /app/mc1/target/mc1-0.0.1-SNAPSHOT.jar
    environment:
      SPRING_DATASOURCE_URL: jdbc:mariadb://host.docker.internal:3306/springbootdb
    ports:
      - "8082:8082"
  mc2:
    build: .
    command: java -jar /app/mc2/target/mc2-0.0.1-SNAPSHOT.jar
    environment:
      SPRING_DATASOURCE_URL: jdbc:mariadb://host.docker.internal:3306/springbootdb
    ports:
      - "8083:8083"
  mc3:
    build: .
    command: java -jar /app/mc3/target/mc3-0.0.1-SNAPSHOT.jar
    environment:
      SPRING_DATASOURCE_URL: jdbc:mariadb://host.docker.internal:3306/springbootdb
    ports:
      - "8084:8084"