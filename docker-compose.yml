version: "2"
services:
  zookeeper:
    image: wurstmeister/zookeeper
    expose:
      - "2181"
  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    expose:
      - "9092"
    environment:
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_ADVERTISED_LISTENERS: OUTSIDE://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: OUTSIDE:SASL_PLAINTEXT
      KAFKA_LISTENERS: OUTSIDE://:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: OUTSIDE
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/kafka_server_jaas.conf"
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
    depends_on:
      - zookeeper
    volumes:
      - ./:/etc/kafka
  mariadb:
    image: 'bitnami/mariadb:latest'
    restart: 'always'
    environment:
      MARIADB_ROOT_PASSWORD: root
    volumes:
      - ./init:/docker-entrypoint-initdb.d
    expose:
      - "3306"
    ports:
      - "3306:3306"
  mc1:
    restart: 'on-failure'
    build: .
    command: java -jar /app/mc1/target/mc1-0.0.1-SNAPSHOT.jar
    environment:
      SPRING_DATASOURCE_URL: jdbc:mariadb://mariadb:3306/springbootdb
    ports:
      - "8082:8082"
    depends_on:
      mariadb:
        condition: service_started
  mc2:
    restart: 'on-failure'
    build: .
    command: java -jar /app/mc2/target/mc2-0.0.1-SNAPSHOT.jar
    environment:
      SPRING_DATASOURCE_URL: jdbc:mariadb://mariadb:3306/springbootdb
    ports:
      - "8083:8083"
    depends_on:
      mariadb:
        condition: service_started
  mc3:
    restart: 'on-failure'
    build: .
    command: java -jar /app/mc3/target/mc3-0.0.1-SNAPSHOT.jar
    environment:
      SPRING_DATASOURCE_URL: jdbc:mariadb://mariadb:3306/springbootdb
    ports:
      - "8084:8084"
    depends_on:
      mariadb:
        condition: service_started